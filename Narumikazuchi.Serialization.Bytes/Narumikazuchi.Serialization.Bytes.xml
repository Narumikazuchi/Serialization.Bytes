<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Narumikazuchi.Serialization.Bytes</name>
    </assembly>
    <members>
        <member name="T:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1">
            <summary>
            Represents the functionality to deserialize an an array of <see cref="T:System.Byte"/>[] back into an object of type <typeparamref name="TSerializable"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1.Create">
            <summary>
            Creates a new <see cref="T:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1"/> object for the type <typeparamref name="TSerializable"/>.
            </summary>
            <remarks>
            The <see cref="T:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1"/> this method creates requires the type <typeparamref name="TSerializable"/>
            to implement the <see cref="T:Narumikazuchi.Serialization.ISerializable"/>interface. If you want to serialize a type that doesn't implement the 
            <see cref="T:Narumikazuchi.Serialization.ISerializable"/> interface, use the <see cref="M:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1.Create(System.Func{Narumikazuchi.Serialization.ReadOnlySerializationInfo,`0},System.Action{Narumikazuchi.Serialization.MemberRegister})"/>
            method instead.
            </remarks>
            <returns>A new <see cref="T:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1"/> object for the type <typeparamref name="TSerializable"/>.</returns>
            <exception cref="T:Narumikazuchi.NotAllowed"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1.Deserialize(System.IO.Stream,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1.Deserialize``1(``0,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1.TryDeserialize(System.IO.Stream,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction,`0@)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1.TryDeserialize``1(``0,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction,`0@)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1.RegisteredStrategies">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1">
            <summary>
            Represents the functionality to serialize an object of type <typeparamref name="TSerializable"/> into an array of <see cref="T:System.Byte"/>[].
            Also represents the functionality to deserialize an an array of <see cref="T:System.Byte"/>[] back into an object of type <typeparamref name="TSerializable"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.Create">
            <summary>
            Creates a new <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1"/> object for the type <typeparamref name="TSerializable"/>.
            </summary>
            <remarks>
            The <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1"/> this method creates by default does not use any of the integrated
            strategies while also requiring the type <typeparamref name="TSerializable"/> to implement the <see cref="T:Narumikazuchi.Serialization.ISerializable"/>
            interface. If you want to serialize a type that doesn't implement the <see cref="T:Narumikazuchi.Serialization.ISerializable"/> interface, use
            the <see cref="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.Create(System.Action{`0,Narumikazuchi.Serialization.WriteableSerializationInfo},System.Func{Narumikazuchi.Serialization.ReadOnlySerializationInfo,`0},System.Action{Narumikazuchi.Serialization.MemberRegister})"/>
            method instead.
            </remarks>
            <returns>A new <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1"/> object for the type <typeparamref name="TSerializable"/>.</returns>
            <exception cref="T:Narumikazuchi.NotAllowed"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.Create``1(``0)">
            <summary>
            Creates a new <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1"/> object for the type <typeparamref name="TSerializable"/>.
            </summary>
            <param name="strategies">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> with additional strategies that will be used on top of the integrated ones.</param>
            <remarks>
            The <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1"/> this method creates by default does not use any of the integrated
            strategies while also requiring the type <typeparamref name="TSerializable"/> to implement the <see cref="T:Narumikazuchi.Serialization.ISerializable"/>
            interface. If you want to serialize a type that doesn't implement the <see cref="T:Narumikazuchi.Serialization.ISerializable"/> interface, use
            the <see cref="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.Create(System.Action{`0,Narumikazuchi.Serialization.WriteableSerializationInfo},System.Func{Narumikazuchi.Serialization.ReadOnlySerializationInfo,`0},System.Action{Narumikazuchi.Serialization.MemberRegister})"/>
            method instead.
            </remarks>
            <returns>A new <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1"/> object for the type <typeparamref name="TSerializable"/>.</returns>
            <exception cref="T:Narumikazuchi.NotAllowed"/>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.RegisteredStrategies">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.Deserialize(System.IO.Stream,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.Deserialize``1(``0,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.TryDeserialize(System.IO.Stream,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction,`0@)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.TryDeserialize``1(``0,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction,`0@)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.Serialize(System.IO.Stream,`0,System.Int64,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.Serialize``1(``0,`0,System.Int64,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.TrySerialize(System.IO.Stream,`0,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1.TrySerialize``1(``0,`0,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.ByteSerializer`1">
            <summary>
            Represents the functionality to serialize an object of type <typeparamref name="TSerializable"/> into an array of <see cref="T:System.Byte"/>[].
            </summary>
            <remarks>
            The serializer contains integrated strategies for the following types: <see cref="T:System.Boolean"/>, <see cref="T:System.Byte"/>,
            <see cref="T:System.Char"/>, <see cref="T:System.DateOnly"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Decimal"/>, <see cref="T:System.Double"/>, <see cref="T:System.Guid"/>,
            <see cref="T:System.Half"/>, <see cref="T:System.Int16"/>, <see cref="T:System.Int32"/>, <see cref="T:System.Int64"/>, <see cref="T:System.IntPtr"/>, <see cref="T:System.SByte"/>,
            <see cref="T:System.Single"/>, <see cref="T:System.String"/>, <see cref="T:System.TimeOnly"/>, <see cref="T:System.TimeSpan"/>, <see cref="T:System.UInt16"/>, <see cref="T:System.UInt32"/>,
            <see cref="T:System.UInt64"/>, <see cref="T:System.UIntPtr"/>.<para/>
            You can also override the behavior of any of these strategies by providing a strategy with a higher <see cref="P:Narumikazuchi.Serialization.ISerializationStrategy`1.Priority"/>
            or using an <see cref="T:System.Action`2"/>.
            </remarks>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializer`1.Create">
            <summary>
            Creates a new <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializer`1"/> object for the type <typeparamref name="TSerializable"/>.
            </summary>
            <remarks>
            The <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializer`1"/> this method creates requires the type <typeparamref name="TSerializable"/>
            to implement the <see cref="T:Narumikazuchi.Serialization.ISerializable"/> interface or be of any of the following types: (<see cref="T:System.Boolean"/>, <see cref="T:System.Byte"/>,
            <see cref="T:System.Char"/>, <see cref="T:System.DateOnly"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Decimal"/>, <see cref="T:System.Double"/>, <see cref="T:System.Guid"/>,
            <see cref="T:System.Half"/>, <see cref="T:System.Int16"/>, <see cref="T:System.Int32"/>, <see cref="T:System.Int64"/>, <see cref="T:System.IntPtr"/>, <see cref="T:System.SByte"/>,
            <see cref="T:System.Single"/>, <see cref="T:System.String"/>, <see cref="T:System.TimeOnly"/>, <see cref="T:System.TimeSpan"/>, <see cref="T:System.UInt16"/>, <see cref="T:System.UInt32"/>,
            <see cref="T:System.UInt64"/>, <see cref="T:System.UIntPtr"/>).
            If you want to serialize any other type, use the <see cref="M:Narumikazuchi.Serialization.Bytes.ByteSerializer`1.Create(System.Action{`0,Narumikazuchi.Serialization.WriteableSerializationInfo},System.Action{Narumikazuchi.Serialization.MemberRegister})"/>
            method instead.
            </remarks>
            <returns>A new <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializer`1"/> object for the type <typeparamref name="TSerializable"/>.</returns>
            <exception cref="T:Narumikazuchi.NotAllowed"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializer`1.Create``1(``0)">
            <summary>
            Creates a new <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializer`1"/> object for the type <typeparamref name="TSerializable"/>.
            </summary>
            <param name="strategies">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing all needed strategies for serializing the type <typeparamref name="TSerializable"/>.</param>
            <remarks>
            The <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializer`1"/> this method creates requires the type <typeparamref name="TSerializable"/>
            to implement the <see cref="T:Narumikazuchi.Serialization.ISerializable"/> interface or be of any of the following types: (<see cref="T:System.Boolean"/>, <see cref="T:System.Byte"/>,
            <see cref="T:System.Char"/>, <see cref="T:System.DateOnly"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Decimal"/>, <see cref="T:System.Double"/>, <see cref="T:System.Guid"/>,
            <see cref="T:System.Half"/>, <see cref="T:System.Int16"/>, <see cref="T:System.Int32"/>, <see cref="T:System.Int64"/>, <see cref="T:System.IntPtr"/>, <see cref="T:System.SByte"/>,
            <see cref="T:System.Single"/>, <see cref="T:System.String"/>, <see cref="T:System.TimeOnly"/>, <see cref="T:System.TimeSpan"/>, <see cref="T:System.UInt16"/>, <see cref="T:System.UInt32"/>,
            <see cref="T:System.UInt64"/>, <see cref="T:System.UIntPtr"/>).
            If you want to serialize any other type, either use the <see cref="M:Narumikazuchi.Serialization.Bytes.ByteSerializer`1.Create(System.Action{`0,Narumikazuchi.Serialization.WriteableSerializationInfo},System.Action{Narumikazuchi.Serialization.MemberRegister})"/>
            method or implement a strategy for the specified type <typeparamref name="TSerializable"/> by implementing the <see cref="T:Narumikazuchi.Serialization.ISerializationStrategy`2"/>
            interface.
            </remarks>
            <returns>A new <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializer`1"/> object for the type <typeparamref name="TSerializable"/>.</returns>
            <exception cref="T:Narumikazuchi.NotAllowed"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializer`1.Serialize(System.IO.Stream,`0,System.Int64,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializer`1.Serialize``1(``0,`0,System.Int64,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializer`1.TrySerialize(System.IO.Stream,`0,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteSerializer`1.TrySerialize``1(``0,`0,System.Int64,System.UInt64@,Narumikazuchi.Serialization.SerializationFinishAction)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.ByteSerializer`1.RegisteredStrategies">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.__InMemoryStream.Flush">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.__InMemoryStream.FlushAsync">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.__InMemoryStream.Write(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.__InMemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.__InMemoryStream.WriteByte(System.Byte)">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.__InMemoryStream.SetLength(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.BooleanStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.BooleanStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.BooleanStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.BooleanStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.ByteStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.ByteStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.ByteStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.ByteStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.CharStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.CharStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.CharStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.CharStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.DateOnlyStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.DateOnlyStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.DateOnlyStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.DateOnlyStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.DateTimeStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.DateTimeStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.DateTimeStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.DateTimeStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.DecimalStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.DoubleStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.DecimalStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.DecimalStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.DoubleStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.DoubleStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.DoubleStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.DoubleStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.GuidStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.GuidStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.GuidStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.GuidStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.HalfStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.HalfStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.HalfStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.HalfStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.Int16Strategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.Int16Strategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.Int16Strategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.Int16Strategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.Int32Strategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.Int32Strategy"/> values from and into <see cref="T:Narumikazuchi.Serialization.Bytes.ByteStrategy"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.Int32Strategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.Int32Strategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.Int64Strategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.Int64Strategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.Int64Strategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.Int64Strategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.IntegratedSerializationStrategies">
            <summary>
            Contains all predefined strategies that are available for as default strategies for the three serializer classes
            <see cref="T:Narumikazuchi.Serialization.Bytes.ByteDeserializer`1"/>, <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializer`1"/> and <see cref="T:Narumikazuchi.Serialization.Bytes.ByteSerializerDeserializer`1"/>.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.IntegratedSerializationStrategies.All">
            <summary>
            Contains all predefined strategies in an <see cref="T:Narumikazuchi.Collections.ReadOnlyDictionary`3"/>.
            </summary>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.IntPtrStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.IntPtrStrategy"/> values from and into <see cref="T:Narumikazuchi.Serialization.Bytes.ByteStrategy"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.IntPtrStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.IntPtrStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.SByteStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.SByteStrategy"/> values from and into <see cref="T:Narumikazuchi.Serialization.Bytes.ByteStrategy"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.SByteStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.SByteStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.SingleStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.SingleStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.SingleStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.SingleStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.StringStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.StringStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.StringStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.StringStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.TimeOnlyStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.TimeOnlyStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.TimeOnlyStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.TimeOnlyStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.TimeSpanStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.TimeSpanStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.TimeSpanStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.TimeSpanStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.UInt16Strategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.UInt16Strategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.UInt16Strategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.UInt16Strategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.UInt32Strategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.UInt32Strategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.UInt32Strategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.UInt32Strategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.UInt64Strategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.UInt64Strategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.UInt64Strategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.UInt64Strategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Serialization.Bytes.UIntPtrStrategy">
            <summary>
            Handles serialization of <see cref="T:Narumikazuchi.Serialization.Bytes.UIntPtrStrategy"/> values from and into <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Narumikazuchi.Serialization.Bytes.UIntPtrStrategy.Priority">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Serialization.Bytes.UIntPtrStrategy.CanBeAppliedTo(System.Type)">
            <inheritdoc/>
        </member>
    </members>
</doc>
